{"version":3,"file":"static/js/373.0a7e2d1c.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Pages/MovieDetailsPage/MovieDetailsPage.module.css?1154","Pages/MovieDetailsPage/MovieDetailsPage.jsx","services/tmdb-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsContainer\":\"MovieDetailsPage_movieDetailsContainer__-pEBL\",\"image\":\"MovieDetailsPage_image__7h3fN\",\"movieDetailsWrap\":\"MovieDetailsPage_movieDetailsWrap__3IYy9\",\"movieTitle\":\"MovieDetailsPage_movieTitle__cP+Gv\",\"additionalInfo\":\"MovieDetailsPage_additionalInfo__gII0w\"};","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/tmdb-api';\nimport { Loader } from '../../components/Loader/Loader';\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const movie = await getMovieDetails(movieId);\n        setMovieDetails(movie);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Link to={backLinkHref}>\n        <button>Go Back</button>\n      </Link>\n\n      <div className={css.movieDetailsContainer}>\n        <img\n          className={css.image}\n          src={\n            movieDetails.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`\n              : `https://fakeimg.pl/600x400?text=No+Image+Available`\n          }\n          alt={movieDetails.title}\n        />\n        <div className={css.movieDetailsWrap}>\n          <h1 className={css.movieTitle}>{movieDetails.title}</h1>\n          <h4 className={css.userScore}>\n            User score: {Math.round(movieDetails.vote_average * 10)}%\n          </h4>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <p>\n            {movieDetails.genres.map(genre => (\n              <span key={genre.id}> {genre.name}</span>\n            ))}\n          </p>\n        </div>\n      </div>\n\n      <hr />\n      <h3 className={css.additionalInfo}>Additional information</h3>\n\n      <Link to=\"cast\">\n        <button>Cast</button>\n      </Link>\n      <Link to=\"reviews\">\n        <button>Reviews</button>\n      </Link>\n      <hr />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\nconst API_KEY = '6185b0bb605a39cc0b9b44e58909054a';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// /trending/get-trending a list of the most popular movies for today to create a collection on the home page page.\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n// /search/search-movies keyword search for a movie on the movies page.\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\n// /movies/get-movie-details Request full movie info for the movie page.\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n// /movies/get-movie-credits Request cast info for the movie page.\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n// /movies/get-movie-reviews requesting reviews for the movie page.\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","backLinkHref","useLocation","state","from","useEffect","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","getMovieDetails","sent","t0","console","error","stop","_jsxs","_Fragment","children","_jsx","Link","to","className","css","src","poster_path","concat","alt","title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Loader","Outlet","API_KEY","axios","getTrending","_ref","response","abrupt","data","results","apply","arguments","searchMovies","_ref2","_callee2","query","_context2","_x","_ref3","_callee3","_context3","_x2","getMovieCredits","_ref4","_callee4","_context4","cast","_x3","getReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}